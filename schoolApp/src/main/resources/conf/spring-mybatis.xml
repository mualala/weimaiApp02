<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
		
		<!-- 自动扫描组件，这里要把controler下面的 controller去除，他们是在spring-mvc.xml中配置的，如果不去除会影响事务管理的。  --> 
		 <context:component-scan base-package="com.liancheng.it"> 
		 	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
		 </context:component-scan> 
		 
		<!-- 定义dbcp组件DataSource -->
		<bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="username" value="root"></property>
			<property name="password" value="root"></property>
			<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
			<property name="url" value="jdbc:mysql://localhost:3306/schoolapp?useUnicode=true"></property>
		</bean>
		<!-- 
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	        <property name="driverClassName" value="${jdbc-driver}"/>
	        <property name="url" value="${jdbc-url}"/>
	        <property name="username" value="${jdbc-user}"/>
	        <property name="password" value="${jdbc-password}"/>
	        <property name="filters" value="stat"/>
	        <property name="maxActive" value="20"/>
	        <property name="initialSize" value="1"/>
	        <property name="maxWait" value="60000"/>
	        <property name="minIdle" value="1"/>
	        <property name="timeBetweenEvictionRunsMillis" value="3000"/>
	        <property name="minEvictableIdleTimeMillis" value="300000"/>
	        <property name="validationQuery" value="SELECT 'x'"/>
	        <property name="testWhileIdle" value="true"/>
	        <property name="testOnBorrow" value="false"/>
	        <property name="testOnReturn" value="false"/>
	        <property name="poolPreparedStatements" value="true"/>
	        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
	        <property name="connectionInitSqls" value="set names utf8mb4;"/>
    	</bean>
		 -->
		<!-- 定义SqlSessionFactory 注入映射文件的信息-->
		<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dbcp"></property>
			<property name="mapperLocations" value="classpath:mapper/*Mapper.xml"></property>
		</bean>
		
		<!-- 定义MapperScannerConfigurer -->
		<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.liancheng.it.dao"></property>
			<!-- sqlSessionFactory可以省略不写 -->
			<property name="sqlSessionFactory" ref="ssf"></property>
		</bean>
		
		<!-- transaction manager, use DataSourceTransactionManager -->
		 <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 	<property name="dataSource" ref="dbcp" />
		 </bean>
		
		<tx:advice id="txAdvice" transaction-manager="txManager"> 
			<tx:attributes> 
				
				<tx:method name="delete*" propagation="REQUIRED" read-only="false"
					rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException" />
				<tx:method name="insert*" propagation="REQUIRED" read-only="false"
					rollback-for="java.lang.RuntimeException" />
				<tx:method name="save*" propagation="REQUIRED" read-only="false"
					rollback-for="java.lang.RuntimeException" />	
				<tx:method name="update*" propagation="REQUIRED" read-only="false"
					rollback-for="java.lang.Exception" />
				<tx:method name="find*" propagation="SUPPORTS" />
				<tx:method name="get*" propagation="SUPPORTS" />
				<tx:method name="select*" propagation="SUPPORTS" />
				<tx:method name="see*" read-only="true"/>   
				<tx:method name="*" rollback-for="CustomException"/> 
			</tx:attributes> 
		</tx:advice>
		 
		 <!-- spring declarative transaction management --> 
		 <aop:config> 
			 <aop:pointcut id="fooServiceMethods" 
			 expression="execution(* com.liancheng.it.*.service.*.*(..))"/>  
		 <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceMethods"/>  
		 </aop:config> 

</beans>